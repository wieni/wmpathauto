<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\pathauto\PathautoPatternInterface;
use Drupal\wmpathauto\Event\AliasAlterEvent;
use Drupal\wmpathauto\Event\PatternAlterEvent;

function wmpathauto_pathauto_pattern_alter(PathautoPatternInterface $pattern, array $context)
{
    \Drupal::getContainer()->get('event_dispatcher')->dispatch(
        new PatternAlterEvent($pattern, $context),
        PatternAlterEvent::NAME
    );
}

function wmpathauto_pathauto_alias_alter(string &$alias, array $context)
{
    \Drupal::getContainer()->get('event_dispatcher')->dispatch(
        new AliasAlterEvent($alias, $context),
        AliasAlterEvent::NAME
    );
}

function wmpathauto_entity_update(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmpathauto.menu_link_content.subscriber')
        ->onMenuLinkUpdate($entity);

    \Drupal::getContainer()
        ->get('wmpathauto.entity_alias_dependency.update.subscriber')
        ->onEntityUpdate($entity);
}

function wmpathauto_entity_insert(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmpathauto.menu_link_content.subscriber')
        ->onMenuLinkUpdate($entity);

    \Drupal::getContainer()
        ->get('wmpathauto.entity_alias_dependency.update.subscriber')
        ->onEntityUpdate($entity);
}

function wmpathauto_entity_translation_insert(EntityInterface $translation)
{
    \Drupal::getContainer()
        ->get('wmpathauto.menu_link_content.subscriber')
        ->onMenuLinkUpdate($translation);

    \Drupal::getContainer()
        ->get('wmpathauto.entity_alias_dependency.update.subscriber')
        ->onEntityUpdate($translation);
}

function wmpathauto_entity_delete(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmpathauto.entity_alias_dependency.delete.subscriber')
        ->onEntityDelete($entity);
}
